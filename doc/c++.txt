1.	vector<>
	int a[] = {-1, 2, 1, -4}
	vector<int> num(a, a + sizeof(a)/sizeof(int));
	int len = num.size();
	sort(num.begin(), num.end());

	const char* s[]={"bbab","aba","abc"};
	vector<string> v(s, s+3);
	
	vector<int> result;
	result.push_back(1);

	int nrows = 3;
	vector<string> r(nrows);
	string s;
	r[i] += s[i]; //r[i]表示vector中每个字符串string类型。

2.	map<,>
	map<int, int> mymap;
	int i,j;
	mymap[i] = j;

	if(mymap.count(i) == 0 )
		count <<"found i in mymap"

	map<string, int> mymap;
	mymap["foo"] = 1;
	mymap["too"] = 2;
	for(map<string, int>::iterator it= mymap.begin(); it != mymap.end(); it++){
		cout<<it->first<<"==>"<<it->second<<endl;
	}
	mymap.clear();

3  new
	ListNode *head = new ListNode(0);

4	string
	string str;
	int len = str.length();
	int index, length;
	string substr = str.substr(index, length);
    string substr = str.substr(index); //不指定长度，则到字符串尾.

5 INT_MAX, INT_MIN

6 stack<>
	stack<char> mystack;
	string s;
	mystack.empty();
	mystack.size();
	mystack.top();
	mystack.pop();
	mystack.push(s[i]);
常用函数 
	sort();//vector<int> a; asort(a.begin(), a.end());
	abs(); //int a; abs(a);

	string temp = str.substr(0,1);  //获取第一个 字符；
    int num = atoi(temp.c_str());	//转换字符为数字
