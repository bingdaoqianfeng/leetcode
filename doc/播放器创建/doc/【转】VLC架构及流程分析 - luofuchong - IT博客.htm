<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0064)http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html -->
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" ""><HTML><HEAD 
id="Head"><META content="IE=5.0000" http-equiv="X-UA-Compatible">
<TITLE>	 【转】VLC架构及流程分析 - luofuchong - IT博客 </TITLE>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<META name="keywords" id="metaKeywords" content="【转】VLC架构及流程分析"><LINK id="MainCss" 
href="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/style.css" rel="stylesheet" 
type="text/css"><LINK title="RSS" id="RSSLink" href="http://www.cnitblog.com/luofuchong/rss.aspx" 
rel="alternate" type="application/rss+xml">
<META name="GENERATOR" content="MSHTML 11.00.9600.18098"></HEAD> 
<BODY>
<FORM name="Form1" id="Form1" onsubmit="javascript:return WebForm_OnSubmit();" 
action="90175.html" method="post">
<DIV><INPUT name="__EVENTTARGET" id="__EVENTTARGET" type="hidden"> <INPUT name="__EVENTARGUMENT" id="__EVENTARGUMENT" type="hidden"> 
<INPUT name="__VIEWSTATE" id="&#10;__VIEWSTATE" type="hidden"> </DIV>
<SCRIPT type="text/javascript">
//<![CDATA[
var theForm = document.forms['Form1'];
if (!theForm) {
    theForm = document.Form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</SCRIPT>
 
<SCRIPT src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/WebResource.js" type="text/javascript"></SCRIPT>
 
<SCRIPT language="JavaScript">
									function ctlent(evt,id)
											{
												if(evt.ctrlKey && evt.keyCode == 13)
												{	
													try
													{
														TempSave(id);
													}
													catch(ex)
													{
													}
													finally
													{
													    __doPostBack('AjaxHolder$PostComment$btnSubmit','')
													}
												}
		
												}</SCRIPT>
												 
<SCRIPT language="JavaScript">function SetReplyAuhor(author){document.getElementById('AjaxHolder_PostComment_tbComment').value+="@"+author+"\n";document.getElementById('AjaxHolder_PostComment_tbComment').focus();return false}</SCRIPT>
 
<SCRIPT src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/ScriptResource.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/ScriptResource(1).js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/ScriptResource(2).js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/javascript">
//<![CDATA[
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
//]]>
</SCRIPT>
         <!--done--> 
<DIV id="header"><!--done--> 
<DIV class="header">
<DIV class="headerText"><A class="headermaintitle" id="Header1_HeaderTitle" 
href="http://www.cnitblog.com/luofuchong/">luofuchong</A><BR></DIV></DIV></DIV>
<DIV id="mytopmenu">
<DIV id="mylinks"><!--done--> <A class="menu" id="MyLinks1_HomeLink" href="http://www.cnitblog.com/">IT博客</A>&nbsp;&nbsp;
<A class="menu" id="MyLinks1_MyHomeLink" href="http://www.cnitblog.com/luofuchong/">首页</A>&nbsp;&nbsp;
<A class="menu" id="MyLinks1_NewPostLink" href="http://www.cnitblog.com/luofuchong/admin/EditPosts.aspx?opt=1">新随笔</A> 
<A class="menu" id="MyLinks1_ContactLink" href="http://www.cnitblog.com/luofuchong/contact.aspx?id=1">联系</A>&nbsp;&nbsp;
<A class="menu" id="MyLinks1_Syndication" href="http://www.cnitblog.com/luofuchong/Rss.aspx">聚合</A><A 
id="MyLinks1_XMLLink" href="http://www.cnitblog.com/luofuchong/Rss.aspx"><IMG 
style="border-width: 0px;" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/xml.gif"></A>&nbsp;&nbsp;
<A class="menu" id="MyLinks1_Admin" href="http://www.cnitblog.com/luofuchong/admin/EditPosts.aspx">管理</A> 
</DIV>
<DIV id="mystats"><!--done--> 随笔-81&nbsp; 评论-133&nbsp; 文章-4&nbsp; trackbacks-0 
</DIV></DIV>
<DIV id="centercontent"><!--done--> 
<DIV class="post">
<DIV class="postTitle"><A class="postTitle2" id="viewpost1_TitleUrl" href="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html">【转】VLC架构及流程分析</A>
	 </DIV>
<DIV>
<DIV itemprop="articleBody">
<H4>0x00 前置信息</H4>
<P>VLC是一个非常庞大的工程，我从它的架构及流程入手进行分析，涉及到一些很细的概念先搁置一边，日后详细分析。</P>
<H4>0x01 源码结构（Android Java相关的暂未分析）</H4>
<PRE><CODE># build-android-arm-linux-androideabi/：第三方库。 # modules/：模块代码。 # modules/demux:      解复用模块代码。 # modules/codec:       解码模块相关代码。 # modules/access：    访问模块相关代码。 # 其他：未详细分析。 # src/: VLC架构核心代码。 # src/config/：           从命令行和配置文件加载配置，提供功能模块的读取和写入配置。 # src/control/:            提供动作控制功能，如播放/暂停，音量管理，全屏，日志等。 # src/extras/:             平台特殊性相关代码。 # src/modules/:          模块管理。 # src/network/:           提供网络接口。 # src/posix/:               多线程相关。 # src/osd/:                 显示屏幕上的操作。 # src/interface/ :         提供代码中可以调用的接口中，如按键后硬件作出反应。 # src/playlist/:            管理播放功能，如停止，播放，下一首，随机播放等。 # src/text/:                 字符集。 # src/input/:               输入流相关代码。 # src/video_output/ :   初始化视频播放器，把从解码器获得的数据处理后播放。 # src/audio_output/ :   初始化音频混合器，把从解码器获得的数据处理后播放。 # src/stream_output/:  输出音频流和视频流到网络。 # src/test/:                  libvlc测试模块。 # src/misc/:                libvlc使用的其他部分功能，如线程系统，消息队列，CPU的检测，对象查找系统，或平台的特定代码。 # 其他：未详细分析。 </CODE></PRE>
<H4>0x02 基础概念</H4>
<P>对于一个视频的播放，播放器的执行步骤大致如下：</P>
<OL>
  <LI>读取原始数据</LI>
  <LI>解复用</LI>
  <LI>解码</LI>
  <LI>显示<BR></LI></OL>
<P>VLC在包含以上概念的基础上，又抽象出几个其他概念，先列出VLC中抽象出来的重要概念：</P>
<OL>
  <LI>playlist: playlist表示播放列表，VLC在启动后，即创建一个playlist 
thread，用户输入后，动态创建input。</LI>
  <LI>input:    input表示输入，当用户通过界面输入一个文件或者流地址时，input thread 
  被动态创建，该线程的生命周期直到本次播放结束。</LI>
  <LI>access:   
access表示访问，是VLC抽象的一个层，该层向下直接使用文件或网络IO接口，向上为stream层服务，提供IO接口。</LI>
  <LI>stream:   
  stream表示流，是VLC抽象的一个层，该层向下直接使用access层提供的IO接口，向上为demux层服务，提供IO接口。</LI>
  <LI>demux:    demux表示解复用，是视频技术中的概念，该层向下直接使用stream层提供的IO接口，数据出来后送es_out。</LI>
  <LI>es_out:   es_out表示输出，是VLC抽象的一个层，该层获取demux后的数据，送decode解码。</LI>
  <LI>decode:   decode表示解码，是视频技术中的概念，获取es_out出来的数据(通过一个fifo交互)，解码后送output。</LI>
  <LI>output:   output表示输出，获取从decode出来的数据，送readerer。</LI>
  <LI>readerer: readerer表示显示，获取从output出来的数据(通过一个fifo交互)，然后显示。</LI></OL>
<P>下图显示了这些抽象的概念的关系，其中蓝色表示VLC抽象的概念。<BR><IMG alt="vlc_flowpath_analysis2.png" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/1228423353.png"></P>
<H4>0x04 架构综述</H4>
<P>VLC的整体框架是设计成一套module的管理机制，将功能分类并抽象成modules。</P>
<P>VLC main：  player的main。初始化libVLC 
并加载用户界面。<BR>libVLCcore：libvlc的核心，抽象出了一个libvlc_instance_t 
对象，提供modules的装载/卸载机制。<BR>modules：   
modules提供具体的功能，比如上面的access，demux，decode就是以一个模块的形式存在。<BR>External    
libraries：外部开源库。</P>
<P>模块的加载方式：<BR> 首先模块先将自身注册到VLC中，代码片段如：</P>
<PRE><CODE>vlc_module_begin() ... vlc_module_end() </CODE></PRE>
<P>然后在需要加载模块的时候，调用module_need接口，去找到合适的模块。找到合适的模块后，会执行注册中设置的回调方法，诸如Open*名字的方法。<BR> 
同样自己可以实现模块，只需要按照VLC模块的标准即可。VLC中很多模块就是通过外部的开源库实现的。</P>
<P>vlc中模块大致分类：<BR><IMG alt="1364359619_6154.jpg" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/453586046.jpg"></P>
<H4>0x05 流程分析</H4>
<P>首先，给出流程图，参照该图，再继续下面的流程分析，绿色线表示打开VLC后的执行操作；黑色线表示用户输入一个视频后的执行操作；蓝色线从红色圈开始，表示开始播放输入流后的数据流向。<BR><IMG 
alt="vlc_flowpath_analysis.png" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/2942014279.png"></P>
<H5>(1) main函数（vlc/bin/vlc.c）</H5>
<OL>
  <LI>参数信号处理相关，不详分析。</LI>
  <LI>调用libvlc_new()初始化一个libvlc_instance_t实例。(libvlc_instance_t is opaque. It 
  represents a libvlc instance)<BR> 2.1 
  调用libvlc_InternalCreate创建一个libvlc_int_t。(This structure is a LibVLC instance, 
  for use by libvlc core and plugins.)<BR> 2.2 
  调用libvlc_InternalInit初始化libvlc_int_t实例。<BR>2.3 初始化libvlc_instance_t其他成员。</LI>
  <LI>调用libvlc_set_exit_handler设置VLC退出时的回调函数。</LI>
  <LI>调用libvlc_add_intf添加模块。<BR>4.1 
  获取playlist，如果为空，则调用playlist_Create创建一个playlist结构，并调用playlist_Activate创建新的playlist线程Thread(src/playlist/thread.c)。<BR>4.2 
  调用intf_Create创建一个默认的interface。<BR>4.2.1 调用vlc_custom_create创建一个vlc 
  object(intf_thread_t)。<BR>4.2.2 注册一个添加interface的回调方法。<BR>4.2.3 
  调用module_need加载一个interface模块。</LI>
  <LI>调用libvlc_playlist_play，如果播放列表不为空，并且被设置为自动播放，则播放播放列表内容。</LI>
  <LI>信号处理相关，不详分析。</LI></OL>
<H5>(2) 创建一个输入</H5>
<OL>
  <LI>初始化成功后，程序运行在playlist的线程Thread(src/playlist/thread.c)中，循环接收界面输入的请求。 </LI>
  <LI>当输入一个新的文件或者流地址，在PlaylistVAControl获得信号，并发送该信号。</LI>
  <LI>Thread接收到播放请求后，在LoopRequest中调用PlayItem方法。<BR>3.1 
  调用input_Create创建一个input结构，并初始化各种成员，其中包括调用input_EsOutNew创建p_es_out_display(es_out)。<BR>3.2 
  调用input_Start创建一个input线程Run(src/input/input.c)。</LI></OL>
<H5>(3) 初始化输入</H5>
<P>调用Run(src/input/input.c)中的Init方法，开始初始化。</P>
<OL>
  <LI>调用input_EsOutTimeshiftNew新建一个50M的Timeshift(暂停缓存)，包括创建并初始化p_es_out(es_out)，与后续步骤9相关。</LI>
  <LI>设置input的状态为OPENING_S。</LI>
  <LI>调用InputSourceInit。<BR>3.1 调用input_SplitMRL分解输入uri。<BR>3.2 
  以stream形参为NULL调用demux_New加载"access_demux"模块。<BR>3.3 
  如果没有合适的"access_demux"模块，则调用access_New创建一个实际的access。<BR>3.3.1 
  调用vlc_custom_create创建access_t结构体。<BR>3.3.2 
  调用module_need加载合适的access模块。<BR>3.3.3 
  调用access模块的Open<EM>方法，以avio模块为例。<BR>3.3.3.1 
  调用vlc_init_avformat初始化VLC即avformat环境。<BR>3.3.3.2 
  调用avio_open2打开该uri。<BR>3.3.3.3 设置access的IO方法指针。<BR>3.4 
  调用stream_AccessNew创建一个stream。<BR>3.4.1 
  根据模式（stream/block）设置steam层的IO方法指针。stream层的IO方法实际指向access层对应的IO方法指针。<BR>3.4.2 
  为stream层的缓冲申请并初始化内存。<BR>3.4.3 调用AStreamPrebufferStream执行一次读操作。<BR>3.5 
  调用stream_FilterChainNew，Add stream filters（源码描述）。<BR>3.6 
  调用demux_New创建一个demux。<BR>3.6.1 调用vlc_custom_create创建demux_t结构体。<BR>3.6.2 
  调用module_need加载合适的demux模块。<BR>3.6.3 
  调用demux模块的Open</EM>方法，以avformat/demux模块为例。<BR>3.6.3.1 
  调用stream_Peek从stream层获取数据，用于分析输入的文件格式。<BR>3.6.3.2 
  调用av_probe_input_format分析输入的文件格式。<BR>3.6.3.3 
  设置demux_sys_t结构体部分变量的值。<BR>3.6.3.4 
  调用avformat_alloc_context分配AVFormatContext结构体。<BR>3.6.3.5 
  调用avio_alloc_context设置AVFormatContext结构体的AVIOContext类型成员pb，并设置read和seek方法指针。<BR>3.6.3.6 
  调用avformat_open_input打开一个输入，这里的input与VLC中的input不是一个概念，关于avformat_open_input的分析详见我的另一篇文章《avformat_open_input详细分析》<A 
  href="http://jiya.io/archives/analysis-avformat_open_input.html">链接地址</A>。<BR>3.6.3.7 
  调用avformat_find_stream_info分析流信息，该方法通过读取数据初始化流以及流解码信息。<BR>3.6.3.8 
  根据分析的流信息，设置fmt变量，并调用es_out_Add。<BR>3.6.3.9 
  实际调用EsOutAdd(src/input/es_out.c)，添加一个es_out，有几个流就做几次es_out_Add操作，比如该输入中有一个视频流和一个音频流，则作两次es_out_Add操作。<BR>3.6.3.10 
  nb_chapters相关未详细分析。<BR>3.7 设置record相关。<BR>3.8 调用demux_Control设置demux pts 
  delay。<BR>3.9 调用demux_Control设置fps。</LI>
  <LI>调用demux_Control获取输入的长度。</LI>
  <LI>调用StartTitle显示标题。</LI>
  <LI>调用LoadSubtitles加载字幕。</LI>
  <LI>调用LoadSlaves，含义不详。</LI>
  <LI>调用InitPrograms，设置es_out和decoder相关。<BR>8.1 
  调用UpdatePtsDelay计算正确的pts_delay值。<BR>8.2 sout相关可选，暂不分析。<BR>8.3 
  调用es_out_SetMode，设置es_out的mode为ES_OUT_MODE_AUTO。<BR>8.4 
  以DEMUX_SET_GROUP指令调用demux_Control，DEMUX_SET_GROUP/SET_ES only a hint  for 
  demuxer (mainly DVB) to allow not reading everything。</LI>
  <LI>续8.3，实际调用EsOutControlLocked进入case ES_OUT_SET_MODE分支。<BR>9.1 设置es_out_sys_t 
  的b_active和i_mode。<BR>9.2 调用EsOutSelect方法，根据指定模块选择一个es_out。<BR>9.3 
  在EsOutSelect方法中进入ES_OUT_MODE_AUTO分支，进一步调用EsSelect方法，再进一步调用EsCreateDecoder方法创建decoder。<BR>9.3.1 
  调用input_DecoderNew创建一个新的decoder。<BR>9.3.2 
  如果需要缓存，调用input_DecoderStartWait发送信号，开始线程等待。<BR>9.3.3 
  调用EsOutDecoderChangeDelay设置decode delay。</LI>
  <LI>续9.3.1进入decoder_New方法。<BR>10.1 调用CreateDecoder创建decoder配置结构体。<BR>10.1.1 
  调用vlc_custom_create创建一个vlc object(decoder_t)。<BR>10.1.2 新建decode 
  fifo。<BR>10.1.3 调用module_need加载适配的解码模块。<BR>10.1.3.1  
  调用decode模块的OpenDecoder方法，以codec/avcodec模块为例。<BR>10.1.3.2 调用GetFfmpegCodec方法 
  determine codec type（源码描述）。<BR>10.1.3.3 
  调用vlc_init_avcodec方法初始化解码环境。<BR>10.1.3.4 
  调用avcodec_find_decoder设置AVCodec。<BR>10.1.3.5 
  调用avcodec_alloc_context3分配一个AVCodecContext。<BR>10.1.3.6 
  调用Init*Dec系列初始化解码环境。<BR>10.1.4 初始化decoder_t结构体其他成员。<BR>10.2 
  调用vlc_clone创建解码线程DecoderThread。</LI>
  <LI>续10.1.3.5，以InitVideoDec为例。<BR>12.1 为decoder_sys_t结构分配内存。<BR>12.2 
  设置相关回调方法。<BR>12.3 设置解码线程类型。<BR>12.4 
  调用ffmpeg_InitCodec初始化extradata相关数据。<BR>12.5 
  调用OpenVideoCodec方法，设置解码的长宽及采用率，进一步调用avcodec_open2打开codec。</LI>
  <LI>根据需要，设置线程优先级。</LI>
  <LI>设置meta相关。</LI>
  <LI>初始化完成，设置该input的状态为PLAYING_S。</LI></OL>
<H5>(4) 播放输入</H5>
<P>MainLoop(src/input/input.c)</P>
<OL>
  <LI>调用MainLoopDemux访问demuxer去demux数据。</LI>
  <LI>进一步调用在加载demux模块时设置的demux方法，同样以avformat/demux模块为例，实际调用Demux方法(module/demux/avformat/demux.c)。<BR>2.1 
  调用av_read_frame读取一帧数据。<BR>2.2 
  判断读取无误时，则为block_t结构分配内存，并将这一帧从AVPacket中拷贝至block_t结构中。<BR>2.3 
  如果该帧是I帧，则设置I帧标致位。<BR>2.4 时间戳处理相关，未深入分析。<BR>2.5 
  根据需要调用es_out_Control设置PCR，未深入分析。<BR>2.6 调用es_out_Send将这一帧数据发送给es_out。<BR>2.7 
  调用av_free_packet释放这一帧数据。</LI>
  <LI>调用es_out_Send后，实际调用EsOutSend(src/input/es_out.c)方法。<BR>3.1 
  调用stats_Update更新相关状态，具体未详分析。<BR>3.2 
  设置预读相关，如果需要预读，并且到的数据的pts小于预读需要的时间，则设置BLOCK_FLAG_PREROLL标志位。<BR>3.3 检查sout 
  mode，具体有sync 和async mode，异同未详细分析。<BR>3.4 如果设置record，将数据dup后送decoder。<BR>3.5 
  调用input_DecoderDecode将block_t的数据送至decode fifo中。<BR>3.5.1 
  判断控制速度线程等待相关信息，具体未详细分析。<BR>3.5.2 如果decode fifo超过最大长度，则清空重置decode 
  fifo。<BR>3.5.3 调用block_FifoPut将该block_t的数据压入decode fifo，并通知读取线程。<BR>3.6 
  格式变化判断处理相关，未详细分析。<BR>3.7 字幕处理相关，未详细分析。</LI>
  <LI>续3.5进入decode read thread，即DecoderThread(src/input/decoder.c)。<BR>4.1 
  调用block_FifoGet方法，从decode fifo中获取数据。<BR>4.2 基于某些条件，发送停止等待消息给其他线程，未详细分析。<BR>4.3 
  调用DecoderProcess方法开始decode a block。<BR>4.4 
  判断输入流的格式，调用不同的方法，这里以视频流为例，调用DecoderProcessVideo方法。<BR>4.5 
  packetizer相关为深入分析，在DecoderProcessVideo方法中进一步调用DecoderDecodeVideo方法。</LI>
  <LI>续4.5调用pf_decode_video，这里以avcodec模块的decoder为例，即DecodeVideo(modules/codec/avcodec/video.c)方法，在该方法中，开始真正的解码。<BR>5.1 
   如果在Demux中获取的流信息中包含新的extradata，并且原来的extradata数据为空，则调用ffmpeg_InitCodec初始化 
  codec，如果b_delayed_open为true，则调用OpenVideoCodec重新打开codec。<BR>5.2 
  调用av_init_packet初始化解码数据包。<BR>5.3 调用avcodec_decode_video2解码数据。<BR>5.4 
  调用av_free_packet释放内存。<BR>5.5 计算pts值，返回解码后的数据。<BR>5.6 
  如果opaque为空，则调用ffmpeg_NewPictBuf方法创建一个新的picture  
  buffer。具体调用回调指针pf_vout_buffer_new指向的vout_new_buffer，进一步调用 
  input_resource_RequestVout最终调用VoutCreate。<BR>5.6.1 调用vlc_custom_create创建一个vlc 
  object(vout_thread_t)。<BR>5.6.2 调用spu_Create初始化sub picture unit。<BR>5.6.3 
  调用vlc_clone创建一个output线程Thread(src/video_output/video_output.c)。<BR>5.6.4 
  output线程循环调用vout_control_Pop，首次进入ThreadControl方法中，执行ThreadStart方向，创建picture 
  fifo(p-&gt;decoder_fifo)。</LI>
  <LI>pf_decode_video返回后，解码后的数据保存在p_pic中，进一步调用DecoderPlayVideo方法，在该方法中调用vout_PutPicture将解码后的数据压入picture 
  fifo中。</LI>
  <LI>当picture 
  fifo中有数据后，vout线程调用ThreadDisplayPicture中的ThreadDisplayPreparePicture方法。<BR>7.1 
  调用picture_fifo_Pop从picture fifo中获取解码后的数据。<BR>7.2 如果延迟太大，并且设置延迟丢帧，则丢掉该帧数据。</LI>
  <LI>调用ThreadDisplayRenderPicture显示图像。</LI></OL>
<H5>0x06 总结</H5>
<P>对VLC的流程分析，主要通过跟踪数据流向的方式展开。对于最后显示部分的分析还不足，另外很多细节尚未深入。</P>
<P>参考：</P>
<OL>
  <LI><A 
  href="http://blog.csdn.net/tx3344/article/details/8517062">http://blog.csdn.net/tx3344/article/details/8517062</A></LI>
  <LI><A 
  href="http://my.oschina.net/xiaot99/blog/197555">http://my.oschina.net/xiaot99/blog/197555</A></LI></OL></DIV></DIV>
<DIV class="postDesc">posted on 2015-08-13 16:02 <A href="http://www.cnitblog.com/luofuchong/">lfc</A> 
阅读(48) <A href="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html#Post">评论(0)</A> 
&nbsp;<A href="http://www.cnitblog.com/luofuchong/admin/EditPosts.aspx?postid=90175">编辑</A>&nbsp;<A 
href="http://www.cnitblog.com/luofuchong/AddToFavorite.aspx?id=90175">收藏</A> <A 
href="http://www.cnitblog.com/luofuchong/services/trackbacks/90175.aspx">引用</A>  
</DIV></DIV><IMG width="1" height="1" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/90175.jpg"> <!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html"
dc:identifier="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html"
dc:title="【转】VLC架构及流程分析"
trackback:ping="http://www.cnitblog.com/luofuchong/services/trackbacks/90175.aspx" />
</rdf:RDF>
--> 
<SCRIPT type="text/javascript">
//<![CDATA[
Sys.WebForms.PageRequestManager._initialize('AjaxHolder$scriptmanager1', document.getElementById('Form1'));
Sys.WebForms.PageRequestManager.getInstance()._updateControls(['tAjaxHolder$UpdatePanel1'], [], [], 90);
//]]>
</SCRIPT>
 
<DIV id="AjaxHolder_UpdatePanel1">
<STYLE>
td { font-size: 12px }
.commentTextBox 
{ 
    font-family : Verdana; 
    font-size: 13px;
 }
</STYLE>
 <!--Beging Temp Save--> 
<STYLE>.userData { BEHAVIOR: url(#default#userdata) }
	</STYLE>
 
<DIV class="userData" id="CommentsPersistDiv"></DIV>
<SCRIPT type="text/javascript">
function pageLoad()
{
    Sys.WebForms.PageRequestManager.getInstance().add_initializeRequest(handleInitializeRequest);
    //Sys.WebForms.PageRequestManager.getInstance().add_endRequest(handleEndRequest);
}

function handleInitializeRequest(sender, args)
{
    var prm = Sys.WebForms.PageRequestManager.getInstance();
    var eid = args.get_postBackElement().id;
    if (eid.indexOf("DeleteLink")>0) 
    {
       args.get_postBackElement().innerHTML = "<font color='red'>正在删除...</font>";         
    }    
    if (eid.indexOf("btnSubmit")>0) 
    {
       document.getElementById("AjaxHolder_PostComment_ltSubmitMsg").innerHTML="正在提交...";
       document.getElementById("AjaxHolder_PostComment_btnSubmit").disabled = true;
       
    }    
   
}	

function TempSave(ElementID)
{
	try
	{
	CommentsPersistDiv.setAttribute("CommentContent",document.getElementById(ElementID).value);
	CommentsPersistDiv.save("CommentXMLStore");
	}
	catch(ex)
	{
	}
	
}
function Restore(ElementID)
{
	CommentsPersistDiv.load("CommentXMLStore");
	document.getElementById(ElementID).value=CommentsPersistDiv.getAttribute("CommentContent");
}	
			
			
</SCRIPT>
 <!--Ene TempSave--> 
<DIV id="AjaxHolder_PostComment_divCommnentArea">
<DIV class="commentform"><SPAN id="AjaxHolder_PostComment_ltSubmitMsg" style="color: red;"></SPAN> 
<BR><A name="Feedback"></A>	 
<TABLE border="0" cellspacing="1" cellpadding="1">
  <TBODY>
  <TR>
    <TD colspan="3"><A href="http://q.cnblogs.com/" target="_blank">博问 - 
      解决您的IT难题</A><BR></TD></TR>
  <TR>
    <TD width="75"></TD>
    <TD></TD>
    <TD></TD></TR>
  <TR>
    <TD></TD>
    <TD colspan="2"><A href="http://www.cnblogs.com/" 
      target="_blank">博客园首页</A>&nbsp; <A href="http://news.cnblogs.com/" target="_blank">IT新闻</A>&nbsp; 
      <A href="http://home.cnblogs.com/q/" target="_blank">IT问答</A>&nbsp; <A 
      href="http://job.cnblogs.com/" target="_blank">程序员招聘</A>			 </TD></TR>
  <TR>
    <TD width="55">标题</TD>
    <TD><INPUT name="AjaxHolder$PostComment$tbTitle" class="commenttb" id="AjaxHolder_PostComment_tbTitle" style="width: 320px;" type="text" value="re: 【转】VLC架构及流程分析"></TD>
    <TD><SPAN id="AjaxHolder_PostComment_RequiredFieldValidator1" style="color: red; visibility: hidden;">请输入标题</SPAN></TD></TR>
  <TR>
    <TD>姓名</TD>
    <TD><INPUT name="AjaxHolder$PostComment$tbName" class="commenttb" id="AjaxHolder_PostComment_tbName" style="width: 320px;" type="text"></TD>
    <TD><SPAN id="AjaxHolder_PostComment_RequiredFieldValidator2" style="color: red; visibility: hidden;">请输入你的姓名</SPAN></TD></TR>
  <TR>
    <TD>主页</TD>
    <TD><INPUT name="AjaxHolder$PostComment$tbUrl" class="commenttb" id="AjaxHolder_PostComment_tbUrl" style="width: 320px;" type="text"></TD>
    <TD><FONT face="宋体"></FONT></TD></TR>
  <TR>
    <TD align="left" colspan="3">
      <TABLE class="CommentForm" id="AjaxHolder_PostComment_tbCaptchaImage" 
      border="0" cellspacing="0" cellpadding="0">
        <TBODY>
        <TR>
          <TD colspan="3"><SPAN id="AjaxHolder_PostComment_Requiredfieldvalidator4" 
            style="color: red; display: none;">请输入验证码</SPAN>							 <SPAN id="AjaxHolder_PostComment_lblImage" 
            style="color: red; font-weight: bold;"></SPAN>						 </TD></TR>
        <TR>
          <TD width="78">验证码</TD>
          <TD><INPUT name="AjaxHolder$PostComment$CodeNumberTextBox" id="AjaxHolder_PostComment_CodeNumberTextBox" type="text">*</TD>
          <TD align="left"><IMG id="AjaxHolder_PostComment_Img1" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/JpegImage.jpg">
            						 </TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD colspan="3">内容(提交失败后,可以通过“恢复上次提交”恢复刚刚提交的内容)			 
      <DIV style="width: 610px;">
      <DIV style="width: 410px; float: left;"><SPAN id="AjaxHolder_PostComment_RequiredFieldValidator3" 
      style="color: red; visibility: hidden;">请输入评论内容</SPAN><BR><TEXTAREA name="AjaxHolder$PostComment$tbComment" class="commentTextBox" id="AjaxHolder_PostComment_tbComment" style="width: 400px; height: 220px;" onkeydown="ctlent(event,'AjaxHolder_PostComment_tbComment')" rows="10" cols="50"></TEXTAREA>
      			 </DIV>
      <DIV 
  style="width: 200px; margin-top: 25px; float: right;"></DIV></DIV></TD></TR>
  <TR>
    <TD colspan="3"><SPAN id="AjaxHolder_PostComment_Message" style="color: red;"></SPAN>
      		 </TD>
  <TR>
    <TD colspan="3"><INPUT name="AjaxHolder$PostComment$chkRemember" tabindex="-1" 
      id="AjaxHolder_PostComment_chkRemember" type="checkbox" 
      checked="checked"><LABEL for="AjaxHolder_PostComment_chkRemember">Remember 
      Me?</LABEL></TD></TR>
  <TR>
    <TD height="23"><INPUT name="AjaxHolder$PostComment$btnSubmit" id="AjaxHolder_PostComment_btnSubmit" onclick="TempSave('AjaxHolder_PostComment_tbComment');WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;AjaxHolder$PostComment$btnSubmit&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, false))" type="submit" value="提交">
      				 </TD>
    <TD height="23" colspan="2">&nbsp;				<A id="AjaxHolder_PostComment_lnkLogin" 
      href="http://www.cnitblog.com/login.aspx?ReturnURL=http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html&amp;SourceURL=/luofuchong/archive/2015/08/13/90175.html">登录</A>&nbsp;&nbsp;<A 
      id="AjaxHolder_PostComment_linkLoginComment" onclick="if(document.getElementById('AjaxHolder_PostComment_tbComment').value != '') return confirm('未提交的评论内容将会丢失, 你真的要进入高级评论吗?');" 
      href="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html?login=1#Post">使用高级评论</A>&nbsp;&nbsp;<A 
      href="http://www.cnitblog.com/RequireRegister.aspx">新用户注册</A>&nbsp;&nbsp;<A 
      href="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html#Top">返回页首</A>&nbsp;&nbsp;<A 
      id="AjaxHolder_PostComment_lbRestore" onclick="Restore('AjaxHolder_PostComment_tbComment'); return false;" 
      href="http://www.cnitblog.com/luofuchong/archive/2015/08/13/90175.html#Post">恢复上次提交</A>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      				</TD></TR>
  <TR>
    <TD colspan="3">[使用Ctrl+Enter键可以直接提交]</TD></TR>
  <TR>
    <TD colspan="3"></TD></TR>
  <TR>
    <TD colspan="3"></TD></TR>
  <TR>
    <TD colspan="3"></TD></TR>
  <TR>
    <TD colspan="3">
      <DIV id="blogsite"><A href="http://www.cnblogs.com/">博客园</A>&nbsp;&nbsp;
      			<A href="http://news.cnblogs.com/">IT新闻</A>&nbsp;&nbsp;			<A href="http://www.blogjava.net/">BlogJava</A>&nbsp;&nbsp;
      			<A href="http://q.cnblogs.com/">博问</A>&nbsp;&nbsp;			</DIV></TD></TR>
  <TR>
    <TD height="5" colspan="3"></TD></TR>
  <TR>
    <TD colspan="3"></TD></TR>
  <TR>
    <TD colspan="3"></TD></TR></TBODY></TABLE></DIV>
<DIV id="AjaxHolder_PostComment_ValidationSummary1" style="color: red; display: none;"></DIV></DIV></DIV></DIV>
<DIV id="leftcontent" style="display: none;">
<DIV id="leftcontentcontainer">
<TABLE title="日历" class="Cal" id="Calendar1_entryCal" style="border-width: 1px; border-style: solid; border-collapse: collapse;" 
border="0" cellspacing="0" cellpadding="0">
  <TBODY>
  <TR>
    <TD style="background-color: silver;" colspan="7">
      <TABLE class="CalTitle" style="width: 100%; border-collapse: collapse;" 
      border="0" cellspacing="0">
        <TBODY>
        <TR>
          <TD class="CalNextPrev" style="width: 15%;"><A title="转到上一个月" style="color: black;" 
            href="javascript:__doPostBack('Calendar1$entryCal','V5660')">&lt;</A></TD>
          <TD align="center" style="width: 70%;">2015年8月</TD>
          <TD align="right" class="CalNextPrev" style="width: 15%;"><A title="转到下一个月" 
            style="color: black;" href="javascript:__doPostBack('Calendar1$entryCal','V5722')">&gt;</A></TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TH align="center" class="CalDayHeader" abbr="日" scope="col">日</TH>
    <TH align="center" class="CalDayHeader" abbr="一" scope="col">一</TH>
    <TH align="center" class="CalDayHeader" abbr="二" scope="col">二</TH>
    <TH align="center" class="CalDayHeader" abbr="三" scope="col">三</TH>
    <TH align="center" class="CalDayHeader" abbr="四" scope="col">四</TH>
    <TH align="center" class="CalDayHeader" abbr="五" scope="col">五</TH>
    <TH align="center" class="CalDayHeader" abbr="六" scope="col">六</TH></TR>
  <TR>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">26</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">27</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">28</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">29</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">30</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">31</TD>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">1</TD></TR>
  <TR>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">2</TD>
    <TD align="center" style="width: 14%;">3</TD>
    <TD align="center" style="width: 14%;">4</TD>
    <TD align="center" style="width: 14%;">5</TD>
    <TD align="center" style="width: 14%;">6</TD>
    <TD align="center" style="width: 14%;">7</TD>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">8</TD></TR>
  <TR>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">9</TD>
    <TD align="center" style="width: 14%;">10</TD>
    <TD align="center" style="width: 14%;">11</TD>
    <TD align="center" style="width: 14%;"><A href="http://www.cnitblog.com/luofuchong/archive/2015/08/12.html"><U>12</U></A></TD>
    <TD align="center" style="width: 14%;"><A href="http://www.cnitblog.com/luofuchong/archive/2015/08/13.html"><U>13</U></A></TD>
    <TD align="center" style="width: 14%;">14</TD>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">15</TD></TR>
  <TR>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">16</TD>
    <TD align="center" style="width: 14%;">17</TD>
    <TD align="center" style="width: 14%;">18</TD>
    <TD align="center" style="width: 14%;">19</TD>
    <TD align="center" style="width: 14%;">20</TD>
    <TD align="center" style="width: 14%;">21</TD>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">22</TD></TR>
  <TR>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">23</TD>
    <TD align="center" style="width: 14%;">24</TD>
    <TD align="center" style="width: 14%;">25</TD>
    <TD align="center" style="width: 14%;">26</TD>
    <TD align="center" style="width: 14%;">27</TD>
    <TD align="center" style="width: 14%;">28</TD>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">29</TD></TR>
  <TR>
    <TD align="center" class="CalWeekendDay" style="width: 14%;">30</TD>
    <TD align="center" style="width: 14%;">31</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">1</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">2</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">3</TD>
    <TD align="center" class="CalOtherMonthDay" style="width: 14%;">4</TD>
    <TD align="center" class="CalOtherMonthDay" 
  style="width: 14%;">5</TD></TR></TBODY></TABLE><BR>
<H3>常用链接</H3>
<UL>
  <LI><A id="SingleColumn1_ctl00_repeaterLinks_ctl01_lnkLinkItem" href="http://www.cnitblog.com/luofuchong/MyPosts.html">我的随笔</A></LI>
  <LI><A id="SingleColumn1_ctl00_repeaterLinks_ctl02_lnkLinkItem" href="http://www.cnitblog.com/luofuchong/MyComments.html">我的评论</A></LI>
  <LI><A id="SingleColumn1_ctl00_repeaterLinks_ctl03_lnkLinkItem" href="http://www.cnitblog.com/luofuchong/OtherPosts.html">我参与的随笔</A></LI></UL>
<H3>留言簿<SPAN style="font-size: 11px; font-weight: normal;">(55)</SPAN></H3>
<UL>
  <LI><A id="SingleColumn1__1eb6609_lnkMessages" href="http://www.cnitblog.com/luofuchong/Contact.aspx?id=1">给我留言</A>
	 
  <LI><A id="SingleColumn1__1eb6609_lnkPublicMsgView" href="http://www.cnitblog.com/luofuchong/default.aspx?opt=msg">查看公开留言</A>
	 
  <LI><A id="SingleColumn1__1eb6609_lnkPrivateMsgView" href="http://www.cnitblog.com/luofuchong/admin/MyMessages.aspx">查看私人留言</A>
  	 </LI></UL><!--done-->		 
<H1 class="catListTitle">随笔档案</H1>
<UL class="catList">
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl01_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/11.html">2015年11月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl02_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/10.html">2015年10月 
  (3)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl03_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/09.html">2015年9月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl04_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/08.html">2015年8月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl05_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/06.html">2015年6月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl06_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/05.html">2015年5月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl07_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/03.html">2015年3月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl08_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/02.html">2015年2月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl09_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2015/01.html">2015年1月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl10_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2014/12.html">2014年12月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl11_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2014/11.html">2014年11月 
  (3)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl12_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2014/09.html">2014年9月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl13_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2014/08.html">2014年8月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl14_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2013/09.html">2013年9月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl15_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2013/08.html">2013年8月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl16_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2012/01.html">2012年1月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl17_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2011/11.html">2011年11月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl18_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2011/10.html">2011年10月 
  (3)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl19_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2011/08.html">2011年8月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl20_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2011/05.html">2011年5月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl21_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2010/08.html">2010年8月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl22_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2010/05.html">2010年5月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl23_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2010/03.html">2010年3月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl24_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2010/02.html">2010年2月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl25_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2009/10.html">2009年10月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl26_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2009/09.html">2009年9月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl27_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2009/07.html">2009年7月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl28_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2009/04.html">2009年4月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl29_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2009/03.html">2009年3月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl30_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/10.html">2008年10月 
  (3)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl31_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/09.html">2008年9月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl32_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/08.html">2008年8月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl33_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/05.html">2008年5月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl34_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/04.html">2008年4月 
  (4)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl35_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/03.html">2008年3月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl36_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2008/01.html">2008年1月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl37_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/12.html">2007年12月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl38_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/11.html">2007年11月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl39_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/10.html">2007年10月 
  (1)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl40_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/09.html">2007年9月 
  (5)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl41_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/08.html">2007年8月 
  (8)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl42_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/07.html">2007年7月 
  (2)</A></LI>
  <LI class="catListItem"><A class="listitem" id="SingleColumn1_Categories_CatList_ctl00_LinkList_ctl43_Link" 
  href="http://www.cnitblog.com/luofuchong/archive/2007/01.html">2007年1月 
  (5)</A></LI></UL>
<SCRIPT language="JavaScript">
function SearchGoogle(key,evt,site)
		{
			if(evt.keyCode==13 || evt.keyCode==0 || evt.type =='click')
			{
				key.focus();
				var keystr = encodeURIComponent(key.value);
				url = "http://www.google.com/search?q=";
				url = url+keystr;
				url += "&ie=UTF-8&oe=GB2312&hl=zh-CN&domains="+site+"&sitesearch="+site;
				window.location=url;
				return false;
			}
		}
</SCRIPT>
 
<H3>搜索</H3>
<UL>
  <LI>
  <LI><INPUT name="q" id="q" style="width: 130px;" onkeydown="return SearchGoogle(document.getElementById('q'),event,'www.cnitblog.com/luofuchong')" type="text">&nbsp;<INPUT name="sa" onclick="SearchGoogle(document.getElementById('q'),event,'www.cnitblog.com/luofuchong')" type="button" value="搜索">
  	 </LI></UL>
<H3>最新评论	 <A id="SingleColumn1__326fc9f_RSSHyperlink1" href="http://www.cnitblog.com/luofuchong/CommentsRSS.aspx"><IMG 
style="border-width: 0px;" src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/xml.gif"></A></H3>
<DIV class="RecentComment">
<UL>
  <LI style="-ms-word-break: break-all;"><A id="SingleColumn1__326fc9f_CommentList_ctl01_Hyperlink1" 
  href="http://www.cnitblog.com/luofuchong/archive/2013/12/25/55259.html#89129">1.&nbsp;re: 
  ubifs轻松上路</A>			 </LI>
  <LI style="-ms-word-break: break-all;">				评论内容较长,点击标题查看			 </LI>
  <LI style="text-align: right; margin-right: 4px;">--你是傻逼</LI>
  <LI style="-ms-word-break: break-all;"><A id="SingleColumn1__326fc9f_CommentList_ctl02_Hyperlink1" 
  href="http://www.cnitblog.com/luofuchong/archive/2013/08/15/32682.html#88389">2.&nbsp;re: 
  MTD原始设备与FLASH硬件驱动的对话</A>			 </LI>
  <LI style="-ms-word-break: break-all;">				新手，刚开始学习，受教了			 </LI>
  <LI style="text-align: right; margin-right: 4px;">--wafx1314</LI>
  <LI style="-ms-word-break: break-all;"><A id="SingleColumn1__326fc9f_CommentList_ctl03_Hyperlink1" 
  href="http://www.cnitblog.com/luofuchong/archive/2012/12/21/38986.html#86861">3.&nbsp;re: 
  [转]hlist哈希链表</A>			 </LI>
  <LI style="-ms-word-break: break-all;">
  				首节点的pprev指向头节点的first，尾节点的next指针为NULL. <BR>应该是这样的。			 </LI>
  <LI style="text-align: right; margin-right: 4px;">--内核菜菜鸟</LI>
  <LI style="-ms-word-break: break-all;"><A id="SingleColumn1__326fc9f_CommentList_ctl04_Hyperlink1" 
  href="http://www.cnitblog.com/luofuchong/archive/2012/07/14/44458.html#82911">4.&nbsp;re: 
  【引】Using the initial RAM disk (initrd)</A>			 </LI>
  <LI style="-ms-word-break: break-all;">评论内容较长,点击标题查看			 </LI>
  <LI style="text-align: right; margin-right: 4px;">--help my essay</LI>
  <LI style="-ms-word-break: break-all;"><A id="SingleColumn1__326fc9f_CommentList_ctl05_Hyperlink1" 
  href="http://www.cnitblog.com/luofuchong/archive/2012/06/17/38986.html#81439">5.&nbsp;re: 
  [转]hlist哈希链表</A>			 </LI>
  <LI style="-ms-word-break: break-all;">				感谢			 </LI>
  <LI style="text-align: right; margin-right: 4px;">--为何</LI></UL></DIV>
<H3>阅读排行榜</H3>
<DIV class="RecentComment">
<UL style="-ms-word-break: break-all;">
  <LI><A id="SingleColumn1__3afc52d_TopList_ctl01_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/12/21834.aspx">1.&nbsp;U-BOOT下使用bootm引导内核方法(37738)</A>
  			 </LI>
  <LI><A id="SingleColumn1__3afc52d_TopList_ctl02_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2009/03/11/55259.aspx">2.&nbsp;ubifs轻松上路(19554)</A>
  			 </LI>
  <LI><A id="SingleColumn1__3afc52d_TopList_ctl03_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/10/21725.aspx">3.&nbsp;2.6.14内核移植心得(17702)</A>
  			 </LI>
  <LI><A id="SingleColumn1__3afc52d_TopList_ctl04_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/10/21711.aspx">4.&nbsp;根文件系统的制作(15956)</A>
  			 </LI>
  <LI><A id="SingleColumn1__3afc52d_TopList_ctl05_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/11/12/36157.aspx">5.&nbsp;输入子系统--event层分析(13932)</A>
  			 </LI></UL></DIV>
<H3>评论排行榜</H3>
<DIV class="RecentComment">
<UL style="-ms-word-break: break-all;">
  <LI><A id="SingleColumn1__b71d0_TopList_ctl01_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/10/21725.aspx">1.&nbsp;2.6.14内核移植心得(17)</A>
  			 </LI>
  <LI><A id="SingleColumn1__b71d0_TopList_ctl02_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/10/21726.aspx">2.&nbsp;u-boot 
  for s3c44b0x 移植心得(15)</A>			 </LI>
  <LI><A id="SingleColumn1__b71d0_TopList_ctl03_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/10/21711.aspx">3.&nbsp;根文件系统的制作(11)</A>
  			 </LI>
  <LI><A id="SingleColumn1__b71d0_TopList_ctl04_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/12/21834.aspx">4.&nbsp;U-BOOT下使用bootm引导内核方法(10)</A>
  			 </LI>
  <LI><A id="SingleColumn1__b71d0_TopList_ctl05_Hyperlink1" href="http://www.cnitblog.com/luofuchong/archive/2007/01/24/22265.aspx">5.&nbsp;linux-2.6.14下USB驱动移植心得(9)</A>
  			 </LI></UL></DIV></DIV></DIV><!--done--> 
<DIV class="footer">	Powered by: <A 
href="http://www.cnblogs.com/">博客园</A>	模板提供：<A 
href="http://blog.hjenglish.com/">沪江博客</A>	 Copyright ©2015 lfc </DIV>
<SCRIPT type="text/javascript">
//<![CDATA[
var Page_ValidationSummaries =  new Array(document.getElementById("AjaxHolder_PostComment_ValidationSummary1"));
var Page_Validators =  new Array(document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator1"), document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator2"), document.getElementById("AjaxHolder_PostComment_Requiredfieldvalidator4"), document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator3"));
//]]>
</SCRIPT>
 
<SCRIPT type="text/javascript">
//<![CDATA[
var AjaxHolder_PostComment_RequiredFieldValidator1 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator1"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator1");
AjaxHolder_PostComment_RequiredFieldValidator1.controltovalidate = "AjaxHolder_PostComment_tbTitle";
AjaxHolder_PostComment_RequiredFieldValidator1.errormessage = "请输入标题";
AjaxHolder_PostComment_RequiredFieldValidator1.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator1.initialvalue = "";
var AjaxHolder_PostComment_RequiredFieldValidator2 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator2"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator2");
AjaxHolder_PostComment_RequiredFieldValidator2.controltovalidate = "AjaxHolder_PostComment_tbName";
AjaxHolder_PostComment_RequiredFieldValidator2.errormessage = "请输入你的姓名";
AjaxHolder_PostComment_RequiredFieldValidator2.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator2.initialvalue = "";
var AjaxHolder_PostComment_Requiredfieldvalidator4 = document.all ? document.all["AjaxHolder_PostComment_Requiredfieldvalidator4"] : document.getElementById("AjaxHolder_PostComment_Requiredfieldvalidator4");
AjaxHolder_PostComment_Requiredfieldvalidator4.controltovalidate = "AjaxHolder_PostComment_CodeNumberTextBox";
AjaxHolder_PostComment_Requiredfieldvalidator4.errormessage = "请输入验证码";
AjaxHolder_PostComment_Requiredfieldvalidator4.display = "Dynamic";
AjaxHolder_PostComment_Requiredfieldvalidator4.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_Requiredfieldvalidator4.initialvalue = "";
var AjaxHolder_PostComment_RequiredFieldValidator3 = document.all ? document.all["AjaxHolder_PostComment_RequiredFieldValidator3"] : document.getElementById("AjaxHolder_PostComment_RequiredFieldValidator3");
AjaxHolder_PostComment_RequiredFieldValidator3.controltovalidate = "AjaxHolder_PostComment_tbComment";
AjaxHolder_PostComment_RequiredFieldValidator3.errormessage = "请输入评论内容";
AjaxHolder_PostComment_RequiredFieldValidator3.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
AjaxHolder_PostComment_RequiredFieldValidator3.initialvalue = "";
var AjaxHolder_PostComment_ValidationSummary1 = document.all ? document.all["AjaxHolder_PostComment_ValidationSummary1"] : document.getElementById("AjaxHolder_PostComment_ValidationSummary1");
AjaxHolder_PostComment_ValidationSummary1.showmessagebox = "True";
AjaxHolder_PostComment_ValidationSummary1.showsummary = "False";
//]]>
</SCRIPT>
 
<SCRIPT type="text/javascript">
//<![CDATA[

var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
        
document.getElementById('AjaxHolder_PostComment_ValidationSummary1').dispose = function() {
    Array.remove(Page_ValidationSummaries, document.getElementById('AjaxHolder_PostComment_ValidationSummary1'));
}
Sys.Application.initialize();

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator1').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator1'));
}

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator2').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator2'));
}

document.getElementById('AjaxHolder_PostComment_Requiredfieldvalidator4').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_Requiredfieldvalidator4'));
}

document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator3').dispose = function() {
    Array.remove(Page_Validators, document.getElementById('AjaxHolder_PostComment_RequiredFieldValidator3'));
}
//]]>
</SCRIPT>
 </FORM>
<SCRIPT src="【转】VLC架构及流程分析%20-%20luofuchong%20-%20IT博客_files/ShowHidden.js" type="text/javascript"></SCRIPT>
	 
<DIV>
<SCRIPT type="text/javascript">
	var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
	document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</SCRIPT>
	 
<SCRIPT type="text/javascript">
	try {
	var pageTracker = _gat._getTracker("UA-476124-12");
	pageTracker._trackPageview();
	} catch(err) {}</SCRIPT>
	 </DIV></BODY></HTML>
